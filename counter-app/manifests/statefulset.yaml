apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: staging
  annotations: 
    checkov.io/skip1: CKV_K8S_8
    checkov.io/skip2: CKV_K8S_9
    checkov.io/skip3: CKV_K8S_22
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      terminationGracePeriodSeconds: 5
      # automountServiceAccountToken: false
      # securityContext:
      #   seccompProfile:
      #     type: Unconfined
      containers:
        - name: postgres
          image: postgres@sha256:021d7d217750a1b97b2232c1be9331eaa3f7d90a8a1bb2e9c25cd04a28e8306c
          securityContext:
            # allowPrivilegeEscalation: false
            # capabilities:
            #   drop:
            #     - ALL
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: persistent-storage
              subPath: postgres
            - mountPath: /docker-entrypoint-initdb.d
              name: init
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      # volumeClaimTemplates:
      #   - metadata:
      #       name: persistent-storage
      #     spec:
      #       accessModes: ["ReadWriteOnce"]
      #       storageClassName: ebs-sc
      #       resources:
      #         requests:
      #           storage: 2Gi 
      volumes:
        - name: persistent-storage
          persistentVolumeClaim:
            claimName: ebs-claim
        - name: init
          configMap:
            name: postgres-config
            items:
              - key: init
                path: init.sql